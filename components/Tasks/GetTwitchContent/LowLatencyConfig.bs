function configureHttpAgentForLowLatency(httpAgent as object) as void
    if httpAgent = invalid return
    httpAgent.addHeader("Cache-Control", "no-cache")
    httpAgent.addHeader("Connection", "keep-alive")
    httpAgent.addHeader("X-Low-Latency", "1")
    httpAgent.addHeader("Pragma", "no-cache")
    httpAgent.addHeader("X-LL-HLS", "1")
    httpAgent.addHeader("X-LL-Target-Duration", "2")
    httpAgent.addHeader("X-LL-Part-Hold-Back", "1")
end function

function getLowLatencyBufferConfig() as object
    config = {}
    config.initialBufferingMs = 100
    config.minBufferMs = 200
    config.maxBufferMs = 800
    config.bufferForPlaybackMs = 100
    config.bufferForPlaybackAfterRebufferMs = 200
    config.rebufferMs = 100
    return config
end function

function getLowLatencyABRConfig() as object
    config = {}
    config.initialBandwidthBps = 3000000
    config.maxInitialBitrate = 5000000
    config.minDurationForQualityIncreaseMs = 10000
    config.maxDurationForQualityDecreaseMs = 1000
    config.bandwidthMeterSlidingWindowMs = 2000
    return config
end function